(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{362:function(a,s,t){"use strict";t.r(s);var n=t(7),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"使用函数添加环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用函数添加环境变量"}},[a._v("#")]),a._v(" 使用函数添加环境变量")]),a._v(" "),t("p",[a._v("环境变量通常用于存储路径列表，这些路径可用于搜索可执行文件、库文件等。如"),t("code",[a._v("$PATH")]),a._v("、"),t("code",[a._v("$LD_LIBRARY_PATH")]),a._v("。")]),a._v(" "),t("p",[a._v("假设我们要将 myapp 安装到 "),t("code",[a._v("/opt/myapp")]),a._v("，它的二进制文件在 "),t("code",[a._v("bin")]),a._v(" 目录中，库文件在 "),t("code",[a._v("lib")]),a._v(" 目录中。")]),a._v(" "),t("h2",{attrs:{id:"_1-实战演练"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-实战演练"}},[a._v("#")]),a._v(" 1. 实战演练")]),a._v(" "),t("p",[a._v("实现方式如下：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/opt/myapp/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LD_LIBRARY_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/opt/myapp/lib"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v("\n")])])]),t("p",[a._v("我们也可以把下面的函数加入"),t("code",[a._v(".bashrc")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("prepend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -d "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("eval")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("':'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$$")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('" '),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("注意：修改了 "),t("code",[a._v(".bashrc")]),a._v(" 之后要使其立即生效必须执行 "),t("code",[a._v("source ~/.bashrc")]),a._v(" 命令。")]),a._v(" "),t("p",[a._v("另外，使用 ssh 登陆 shell 的时候，系统不会自动调用.bashrc 文件， 只是会自动的读取 如下三个文件："),t("code",[a._v("~/.bash_profile")]),a._v(", "),t("code",[a._v("~/.bash_login")]),a._v(", "),t("code",[a._v("~/.profile")]),a._v(" 里面其中一个。因此，如果想让系统每次登陆时候自动读取文件，可以将.bashrc 文件改为.bash_profile。")])]),a._v(" "),t("h2",{attrs:{id:"_2-工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-工作原理"}},[a._v("#")]),a._v(" 2. 工作原理")]),a._v(" "),t("ol",[t("li",[a._v("检查函数第二个参数所指定的目录是否存在；")]),a._v(" "),t("li",[a._v("如果存在，"),t("code",[a._v("eval")]),a._v(" 表达式将第一个参数所指定的变量值设置成第二个参数的值加上“:”（路径分隔符），随后再跟上首个参数的原始值。")]),a._v(" "),t("li",[a._v("使用 "),t("code",[a._v("export")]),a._v(" 命令使环境变量的修改生效；")])]),a._v(" "),t("p",[a._v("注意，如果变量（第一个参数）为空，则会在末尾留下一个“:”。要解决这个问题，可以将该函数再进行一些修改：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("prepend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -d "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("eval")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v(":+"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("':'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$$")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('" '),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("这里引入了一种 shell 参数扩展形式：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${parameter"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":+")]),a._v("expression}")]),a._v("\n")])])]),t("p",[a._v("如果 parameter 有值且不为空，则使用 expression 的值。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);